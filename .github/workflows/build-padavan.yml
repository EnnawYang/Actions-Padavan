name: Build Padavan

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      name:
        description: '输入机型名称，并且要存在此机型配置文件'
        required: true
        default: 'RM2100'

env:
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison xxd \
               fakeroot kmod cpio git python3-docutils gettext automake autopoint \
               texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
               libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
        echo "TNAME=${{ github.event.inputs.name }}" >> $GITHUB_ENV

    - name: Set up Go (For Build V2ray)
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16.5

    - name: Clone source code
      run: |
        git clone --depth=1 https://github.com/EnnawYang/rt-n56u rt-n56u

    - name: Prepare toolchain
      run: |
        cd $GITHUB_WORKSPACE/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh

    - name: Build Firmware
      id: build
      run: |
        cd $GITHUB_WORKSPACE/rt-n56u/trunk
        if [ ! -f $GITHUB_WORKSPACE/config/$TNAME.config ] ; then
        echo "$TNAME.config not found"
        exit 1
        fi
        cp -f $GITHUB_WORKSPACE/config/$TNAME.config $GITHUB_WORKSPACE/rt-n56u/trunk/configs/templates/$TNAME.config
        mkdir -p /opt/images
        fakeroot ./build_firmware_ci $TNAME
        sudo mv images/*.trx /opt/images/
        echo "::set-output name=status::success"

    - name : Upload packages
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success'
      with:
        name: Padavan-packages
        path: /opt/images

    - name: Generate release tag
      id: tag
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      run: |
        echo "::set-output name=release_tag::$TNAME-$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /opt/images/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: steps.build.outputs.status == 'success'
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notification
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        curl https://sctapi.ftqq.com/${{ secrets.SCTKEY }}.send?title="$TNAME"_Padavan编译完成
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage -d chat_id=${{ secrets.TG_CHAT_ID }} -d text="$TNAME"_Padavan编译完成
