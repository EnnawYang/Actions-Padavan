name: Build Padavan

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      name:
        description: '输入机型名称，并且要存在此机型配置文件'
        required: true
        default: 'RM2100'

env:
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        git clone --depth=1 https://github.com/chongshengB/rt-n56u.git /opt/rt-n56u
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/

    - name: Build Firmware
      id: build
      env:
        TNAME: ${{ github.event.inputs.name }}
      run: |
        cd /opt/rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
        cp -f configs/templates/$TNAME.config .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        chmod +x $GITHUB_WORKSPACE/$TNAME.sh
        $GITHUB_WORKSPACE/$TNAME.sh
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/
        echo "::set-output name=status::success"

    - name : Upload packages
      uses: actions/upload-artifact@main
      if: steps.build.outputs.status == 'success'
      with:
        name: Padavan-packages
        path: /opt/images

    - name: Generate release tag
      id: tag
      env:
        TNAME: ${{ github.event.inputs.name }}
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      run: |
        echo "::set-output name=release_tag::$TNAME-$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /opt/images/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: steps.build.outputs.status == 'success'
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: WeChat Notification
      env:
        TNAME: ${{ github.event.inputs.name }}
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text="$TNAME"_Padavan编译完成
